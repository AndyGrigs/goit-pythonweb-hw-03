from flask import Flask, render_template, request, redirect, url_for, jsonify, send_from_directory, flash
import json
import secrets
import os
from datetime import datetime

app = Flask(__name__)
app.secret_key = os.environ.get('SECRET_KEY') or secrets.token_hex(16)
DATA_FILE = 'storage/data.json'

def load_data():
    """–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ –∑ JSON —Ñ–∞–π–ª—É"""
    try:
        if os.path.exists(DATA_FILE):
            with open(DATA_FILE, 'r', encoding='utf-8') as f:
                return json.load(f)
        return {}
    except:
        return {}
    
def save_data(data):
    """–ó–±–µ—Ä–µ–≥—Ç–∏ –¥–∞–Ω—ñ –≤ JSON —Ñ–∞–π–ª"""
    os.makedirs(os.path.dirname(DATA_FILE), exist_ok=True)
    with open(DATA_FILE, 'w', encoding='utf-8') as f:
        json.dump(data, f, ensure_ascii=False, indent=2)

@app.route("/")
def index():
    return render_template('index.hhtml')

@app.route('/message.html')
@app.route('/message', methods=['POST'])
def handle_message():
    """–û–±—Ä–æ–±–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è"""
    username = request.form.get('username', '').strip()
    message = request.form.get('message', '').strip()
    
    
    # –í–∞–ª—ñ–¥–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö
    if not username:
        flash('–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à –Ω—ñ–∫–Ω–µ–π–º!', 'error')
        return redirect(url_for('message_form'))
    
    if not message:
        flash('–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è!', 'error')
        return redirect(url_for('message_form'))
    
    if len(username) > 50:
        flash('–ù—ñ–∫–Ω–µ–π–º –∑–∞–Ω–∞–¥—Ç–æ –¥–æ–≤–≥–∏–π (–º–∞–∫—Å–∏–º—É–º 50 —Å–∏–º–≤–æ–ª—ñ–≤)!', 'error')
        return redirect(url_for('message_form'))
    
    if len(message) > 500:
        flash('–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞–Ω–∞–¥—Ç–æ –¥–æ–≤–≥–µ (–º–∞–∫—Å–∏–º—É–º 500 —Å–∏–º–≤–æ–ª—ñ–≤)!', 'error')
        return redirect(url_for('message_form'))
    
    try:
        # –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —ñ—Å–Ω—É—é—á—ñ –¥–∞–Ω—ñ
        data = load_data()
        
        # –°—Ç–≤–æ—Ä–∏—Ç–∏ –∫–ª—é—á –∑ –ø–æ—Ç–æ—á–Ω–æ–≥–æ —á–∞—Å—É
        timestamp_key = str(datetime.now())
        
        # –°—Ç–≤–æ—Ä–∏—Ç–∏ —Å–ª–æ–≤–Ω–∏–∫ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        message_dict = {
            'username': username,  
            'message': message     
        }
        
        # –î–æ–¥–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —á–∞—Å–æ–≤–∏–º –∫–ª—é—á–µ–º
        data[timestamp_key] = message_dict
        
        # –ó–±–µ—Ä–µ–≥—Ç–∏ –¥–∞–Ω—ñ
        save_data(data)
        
        flash('–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ!', 'success')
        
    except Exception as e:
        flash('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.', 'error')
        print(f"–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è: {e}")
    
    # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç–∏ –Ω–∞ –≥–æ–ª–æ–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
    return redirect(url_for('index'))

@app.reute('/read')
def read_messages():
    """–°—Ç–æ—Ä—ñ–Ω–∫–∞ –¥–ª—è —á–∏—Ç–∞–Ω–Ω—è –≤—Å—ñ—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å"""
    data = load_data()
    return render_template('read.html', messages=data)

@app.route('/api/messages')
def api_messages():
    """API –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —É JSON —Ñ–æ—Ä–º–∞—Ç—ñ"""
    data = load_data()
    return jsonify(data)

@app.route('/api/messages/<timestamp>')
def api_message_detail(timestamp):
    """API –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞ —á–∞—Å–æ–º"""
    data = load_data()
    message = data.get(timestamp)
    if message:
        return jsonify({timestamp: message})
    return jsonify({'error': '–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ'}), 404

@app.route('/error.html')
@app.route('/404')
def error_404():
    """–°—Ç–æ—Ä—ñ–Ω–∫–∞ –ø–æ–º–∏–ª–∫–∏ 404"""
    return render_template('error.html'), 404

@app.route('/style.css')
def serve_css():
    """–ü–æ–¥–∞—á–∞ CSS —Ñ–∞–π–ª—É"""
    try:
        # –°–ø–æ—á–∞—Ç–∫—É —Å–ø—Ä–æ–±—É—î–º–æ static –ø–∞–ø–∫—É, –ø–æ—Ç—ñ–º –∫–æ—Ä—ñ–Ω—å
        return send_from_directory('static', 'style.css', mimetype='text/css')
    except:
        return send_from_directory('.', 'style.css', mimetype='text/css')
    

@app.route('/logo.png')
def serve_logo():
    """–ü–æ–¥–∞—á–∞ —Ñ–∞–π–ª—É –ª–æ–≥–æ—Ç–∏–ø—É"""
    try:
        # –°–ø–æ—á–∞—Ç–∫—É —Å–ø—Ä–æ–±—É—î–º–æ static –ø–∞–ø–∫—É, –ø–æ—Ç—ñ–º –∫–æ—Ä—ñ–Ω—å
        return send_from_directory('static', 'logo.png', mimetype='image/png')
    except:
        return send_from_directory('.', 'logo.png', mimetype='image/png')
    
@app.route('/static/<path:filename>')
def serve_static(filename):
    """–ü–æ–¥–∞—á–∞ —Å—Ç–∞—Ç–∏—á–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤ –∑ –ø–∞–ø–∫–∏ static"""
    return send_from_directory('static', filename)

@app.errorhandler(404)
def not_found(error):
    """–û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–∫–∏ 404"""
    return render_template('error.html'), 404

if __name__ == '__main__':
    # –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –ø–∞–ø–∫–∏
    os.makedirs('templates', exist_ok=True)
    os.makedirs('static', exist_ok=True)
    os.makedirs('storage', exist_ok=True)
    
    print("üöÄ –ó–∞–ø—É—Å–∫ Flask –¥–æ–¥–∞—Ç–∫–∞...")
    print("üìç –î–æ—Å—Ç—É–ø–Ω—ñ URL:")
    print("   http://localhost:3000/ - –≥–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞")
    print("   http://localhost:3000/message.html - —Ñ–æ—Ä–º–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å")
    print("   http://localhost:3000/read - –ø–µ—Ä–µ–≥–ª—è–¥ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å")
    print("   http://localhost:3000/api/messages - API –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å")
    print("‚èπÔ∏è  –î–ª—è –∑—É–ø–∏–Ω–∫–∏ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C")
    
    app.run(debug=True, host='0.0.0.0', port=3000)